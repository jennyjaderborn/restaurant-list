{
  "_from": "react-responsive-modal",
  "_id": "react-responsive-modal@3.3.0",
  "_inBundle": false,
  "_integrity": "sha512-8iHFUz/STYfdJ5kvjGrZu/ANbdyQ7nVLGf7uEqYUqqa+8aVGaunHAnzirVgvKsMp6nmmJkZjEIv3K0AH/ia8Vw==",
  "_location": "/react-responsive-modal",
  "_phantomChildren": {
    "loose-envify": "1.4.0",
    "object-assign": "4.1.1"
  },
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "react-responsive-modal",
    "name": "react-responsive-modal",
    "escapedName": "react-responsive-modal",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-responsive-modal/-/react-responsive-modal-3.3.0.tgz",
  "_shasum": "adcdb9c1f9b19a6c86faed38f9fcaf7fd3b4c61a",
  "_shrinkwrap": null,
  "_spec": "react-responsive-modal",
  "_where": "C:\\Users\\Amanda\\Desktop\\utveckling\\restaurant-list",
  "author": {
    "name": "Léo Pradel"
  },
  "bugs": {
    "url": "https://github.com/pradel/react-responsive-modal/issues"
  },
  "dependencies": {
    "classnames": "^2.2.6",
    "no-scroll": "^2.1.1",
    "prop-types": "^15.6.2",
    "react-lifecycles-compat": "^3.0.4",
    "react-minimalist-portal": "^2.3.1",
    "react-transition-group": "^2.4.0"
  },
  "description": "A simple responsive react modal",
  "devDependencies": {
    "@types/react": "16.4.12",
    "@types/react-dom": "16.0.7",
    "babel-cli": "6.26.0",
    "babel-core": "6.26.0",
    "babel-eslint": "8.2.6",
    "babel-plugin-external-helpers": "6.22.0",
    "babel-preset-env": "1.7.0",
    "babel-preset-react": "6.24.1",
    "babel-preset-stage-2": "6.24.1",
    "codecov": "3.0.4",
    "dtslint": "0.3.0",
    "enzyme": "3.5.0",
    "enzyme-adapter-react-16": "1.2.0",
    "eslint": "5.4.0",
    "eslint-config-airbnb": "17.0.0",
    "eslint-config-prettier": "2.9.0",
    "eslint-plugin-import": "2.13.0",
    "eslint-plugin-jsx-a11y": "6.1.1",
    "eslint-plugin-jsx-import": "0.0.1",
    "eslint-plugin-react": "7.10.0",
    "identity-obj-proxy": "3.0.0",
    "jest": "23.4.2",
    "jest-enzyme": "6.0.2",
    "prettier": "1.14.0",
    "react": "16.4.1",
    "react-docgen": "2.21.0",
    "react-dom": "16.4.1",
    "rollup": "0.63.5",
    "rollup-plugin-babel": "3.0.7",
    "rollup-plugin-peer-deps-external": "2.2.0",
    "rollup-plugin-postcss": "1.6.2",
    "size-limit": "0.19.0"
  },
  "directories": {},
  "dist": {
    "shasum": "adcdb9c1f9b19a6c86faed38f9fcaf7fd3b4c61a",
    "tarball": "https://registry.npmjs.org/react-responsive-modal/-/react-responsive-modal-3.3.0.tgz",
    "integrity": "sha512-8iHFUz/STYfdJ5kvjGrZu/ANbdyQ7nVLGf7uEqYUqqa+8aVGaunHAnzirVgvKsMp6nmmJkZjEIv3K0AH/ia8Vw==",
    "fileCount": 22,
    "unpackedSize": 95997,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbhRsaCRA9TVsSAnZWagAAIyEP/ipBv++q+9OPnu1qBrWz\nrtvluRvoJNtQ4kw8Qpap3qvXXV4J6iENSLpFtCUeFdJrUoYkSaOpJk3Aq3WG\nc3Kjan7Nlp9JIoEQ+7sVnmBTXmbSIcGqhVNOD/EJl9bN4e16CXiE/D5d9N87\nu1jFWzbNtUqv0yzPfDVmvdbI4C1mUcLtUxUiWTCKindxEQisl55ywbvMK0CP\nvOB7CJKJD2Plg8WIPtShCabQFkanj7Vgeko/sf14PzawDWC9ROHyShVnHLMu\nNUHQzVB0CudaNj+kmQNKyhb4YH4dOdivCuIYh0Z113JBs9ljx3X+NvPuznw/\npbh/tAkIKGRXvQL/epgK2cFlaWHjf/v3ruTS1iM9qgKo0xdXaYtk3ZjRknnU\nHGfgKA+lLXPXpB+Bx4iaf/iYu3p8XkOxYz8Jb7BCN5myuOe8vith8xcAMgX6\nKWG4M14N+rK9BfjnOL1BMlWudi9kJ/FDXtNyQZDDOQwghr0lzBoykiHA8289\n+4AJGTMkcT+EXv48Ds0t/6YXb52PQEwtyQWX4SNbykl/Y3CLuKvtiKmI+jJG\noNh71giQoH0/WdQMyHJplg0lQNg/2Nr5ptldXdcGLCIboo3epDgouqLLujdY\nWTk8oTUcMtwQhKUI1ZUKr3cpb3pe5eThXqE1pVSqq2NBdU2QgMi/Z6y2/xf1\n1OUG\r\n=wGlH\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "lib",
    "types",
    "src"
  ],
  "homepage": "https://github.com/pradel/react-responsive-modal#readme",
  "jest": {
    "setupTestFrameworkScriptFile": "./__tests__/setupTests.js",
    "testPathIgnorePatterns": [
      "<rootDir>/node_modules/",
      "<rootDir>/docs/",
      "<rootDir>/__tests__/setupTests.js"
    ],
    "moduleNameMapper": {
      "\\.(css)$": "identity-obj-proxy"
    }
  },
  "jsnext:main": "lib/index.es.js",
  "keywords": [
    "react",
    "responsive",
    "modal",
    "flex"
  ],
  "license": "MIT",
  "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2018 Léo Pradel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "leopradel",
      "email": "pradel.leo@gmail.com"
    }
  ],
  "module": "lib/index.es.js",
  "name": "react-responsive-modal",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.0.0 || ^16.0.0",
    "react-dom": "^15.0.0 || ^16.0.0"
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "es5"
  },
  "readme": "# react-responsive-modal\n\n[![npm version](https://badge.fury.io/js/react-responsive-modal.svg)](https://badge.fury.io/js/react-responsive-modal)\n[![npm](https://img.shields.io/npm/dm/react-responsive-modal.svg)](https://www.npmjs.com/package/react-responsive-modal)\n[![Build Status](https://travis-ci.org/pradel/react-responsive-modal.svg?branch=master)](https://travis-ci.org/pradel/react-responsive-modal)\n[![codecov](https://codecov.io/gh/pradel/react-responsive-modal/branch/master/graph/badge.svg)](https://codecov.io/gh/pradel/react-responsive-modal)\n[![dependencies Status](https://david-dm.org/pradel/react-responsive-modal/status.svg)](https://david-dm.org/pradel/react-responsive-modal)\n\nA simple responsive react modal compatible with React 15, 16 and ready for React 17.\n\n- Centered modals.\n- Scrolling modals.\n- Multiple modals.\n- Easily customizable via props.\n\n## Demo\n\nYou can find a demo [here](https://react-responsive-modal.leopradel.com/).\n\n## Examples\n\nhttps://react-responsive-modal.leopradel.com/#example\n\n## Installation\n\nWith npm: `npm install react-responsive-modal --save`\n\nOr with yarn: `yarn add react-responsive-modal`\n\n## Usage\n\n[![Edit react-responsive-modal](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/9jxp669j2o)\n\n```javascript\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-responsive-modal';\n\nexport default class App extends React.Component {\n  state = {\n    open: false,\n  };\n\n  onOpenModal = () => {\n    this.setState({ open: true });\n  };\n\n  onCloseModal = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { open } = this.state;\n    return (\n      <div>\n        <button onClick={this.onOpenModal}>Open modal</button>\n        <Modal open={open} onClose={this.onCloseModal} center>\n          <h2>Simple centered modal</h2>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('app'));\n```\n\n## Props\n\n<!-- --begin-insert-props-- -->\n\n### Modal\n\n| Name                | Type     | Default                                                                                                                            | Description                                                                                                                                                                                                                                                                                                                                                                                            |\n| ------------------- | -------- | ---------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| closeOnEsc          | `bool`   | `true`                                                                                                                             | Is the modal closable when user press esc key.                                                                                                                                                                                                                                                                                                                                                         |\n| closeOnOverlayClick | `bool`   | `true`                                                                                                                             | Is the modal closable when user click on overlay.                                                                                                                                                                                                                                                                                                                                                      |\n| onEntered           | `func`   | `null`                                                                                                                             | Callback fired when the Modal is open and the animation is finished.                                                                                                                                                                                                                                                                                                                                   |\n| onExited            | `func`   | `null`                                                                                                                             | Callback fired when the Modal has exited and the animation is finished.                                                                                                                                                                                                                                                                                                                                |\n| **onClose\\***       | `func`   |                                                                                                                                    | Callback fired when the Modal is requested to be closed by a click on the overlay or when user press esc key.                                                                                                                                                                                                                                                                                          |\n| onEscKeyDown        | `func`   | `null`                                                                                                                             | Callback fired when the escape key is pressed.                                                                                                                                                                                                                                                                                                                                                         |\n| onOverlayClick      | `func`   | `null`                                                                                                                             | Callback fired when the overlay is clicked.                                                                                                                                                                                                                                                                                                                                                            |\n| **open\\***          | `bool`   |                                                                                                                                    | Control if the modal is open or not.                                                                                                                                                                                                                                                                                                                                                                   |\n| classNames          | `object` |                                                                                                                                    | An object containing classNames to style the modal, can have properties 'overlay' (classname for overlay div), 'modal' (classname for modal content div), 'closeButton' (classname for the button that contain the close icon), 'closeIcon' (classname for close icon svg). You can customize the transition with 'transitionEnter', 'transitionEnterActive', 'transitionExit', 'transitionExitActive' |\n| styles              | `object` |                                                                                                                                    | An object containing the styles objects to style the modal, can have properties 'overlay', 'modal', 'closeButton', 'closeIcon'.                                                                                                                                                                                                                                                                        |\n| children            | `node`   | `null`                                                                                                                             | The content of the modal.                                                                                                                                                                                                                                                                                                                                                                              |\n| center              | `bool`   | `false`                                                                                                                            | Should the dialog be centered.                                                                                                                                                                                                                                                                                                                                                                         |\n| showCloseIcon       | `bool`   | `true`                                                                                                                             | Show the close icon.                                                                                                                                                                                                                                                                                                                                                                                   |\n| closeIconSize       | `number` | `28`                                                                                                                               | Close icon size.                                                                                                                                                                                                                                                                                                                                                                                       |\n| closeIconSvgPath    | `node`   | `<path d=\"M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z\" />` | A valid svg path to show as icon.                                                                                                                                                                                                                                                                                                                                                                      |\n| animationDuration   | `number` | `500`                                                                                                                              | Animation duration in milliseconds.                                                                                                                                                                                                                                                                                                                                                                    |\n| container           | `object` |                                                                                                                                    | You can specify a container prop which should be of type `Element`. The portal will be rendered inside that element. The default behavior will create a div node and render it at the at the end of document.body.                                                                                                                                                                                     |\n\n<!-- --end-insert-props-- -->\n\n## License\n\nMIT © [Léo Pradel](https://www.leopradel.com/)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pradel/react-responsive-modal.git"
  },
  "scripts": {
    "build": "rollup -c",
    "build:watch": "rollup -c -w",
    "dtslint": "dtslint types",
    "generate-props": "node scripts/generateReactPropsTable.js src/modal.js && yarn prettier",
    "lint": "eslint 'src' 'docs/src' '__tests__'",
    "prettier": "prettier --write \"**/*.{js,ts,tsx,css,scss,json,md}\"",
    "size": "size-limit",
    "test": "yarn test:coverage && yarn lint && yarn build && yarn dtslint && yarn size",
    "test:coverage": "yarn test:only --coverage",
    "test:only": "jest"
  },
  "size-limit": [
    {
      "path": "lib/index.js",
      "limit": "7 KB"
    }
  ],
  "types": "types",
  "version": "3.3.0"
}
